
@model BookListCombinedDto

@{
    const string path = @"/uploads/images";
    var sortOptionsList = Enum.GetValues(Model.PageOptionsOut.SortOption.GetType());
}

<h2>Catalog</h2>
<hr />
<form role="form" id="filter-form" method="get"
      asp-action="Index" asp-controller="Home" asp-area="">
    <input name="pageSize" value="@Model.PageOptionsOut.PageSize" hidden />
    <div class="row">
        <div class="col-sm-3">
            <label>Sort By</label>
            <select class="form-control sort-filter-width" name="SortOption">
                @foreach (PageSortOptions sortOption in sortOptionsList)
                {
                    bool isSelected = sortOption == Model.PageOptionsOut.SortOption;
                    <option value="@sortOption"
                            selected="@isSelected">
                        @sortOption
                    </option>
                }
            </select>
        </div>
        <div class="col-sm-3">
            <label>Tag filter</label>
            <select class="form-control sort-filter-width" name="filterTag">
                <option selected="@(Model.PageOptionsOut.FilterTag == 0)">none</option>
                @foreach (var tag in Model.Tags ?? Enumerable.Empty<BookListTagDto>())
                {
                    <option value="@tag.TagId"
                            selected="@(tag.TagId == Model.PageOptionsOut.FilterTag)">
                        @tag.TagText
                    </option>
                }
            </select>
        </div>
        <div class="col-sm-3">
            <br />
            <div class="m-3">
                <button type="submit" class="btn btn-sm btn-outline-primary">submit</button>
                <a asp-action="Index" class="btn btn-sm btn-outline-secondary">reset</a>
            </div>
        </div>
    </div>
</form>
<br />
<table>
    @foreach (var book in Model.Books ?? Enumerable.Empty<BookCatalogDto>())
    {
        string authors = string.Join(
            separator: ", ",
            values: book.Authors.Select(a => $"{a.LastName} {a.FirstName.ElementAt(0)}."));
        string tags = string.Join(", ", book.Tags);
        string imageSrc = !string.IsNullOrEmpty(book.ImageUrl)
            ? $"{path}/{book.ImageUrl}"
            : "";
        <tr>
            <td class="col-md-1 align-top pt-3 pb-3">
                <img class="img-fluid"
                     src="@imageSrc" alt="">
            </td>
            <td class="col-md-7 pt-3 pb-3">
                <a asp-action="Details"
                   asp-controller="Home"
                   asp-route-id="@book.BookId"
                   class="text-dark">
                    <h5>@Html.DisplayFor(modelItem => book.Title)</h5>
                </a>
                <div>
                    <small>by</small>&nbsp;@authors
                </div>
                <div>
                    Tags:&nbsp;<i>@tags</i>
                </div>
                <div>
                    Price:&nbsp;<span class="h5">@( $"${book.Price:F}")</span>
                </div>
            </td>
            <td class="col-md-1 vert-align align-top pt-3 pb-3">
                <form method="post"
                      asp-action="AddToCart"
                      asp-controller="Cart">
                    <input name="id" value="@book.BookId" hidden />
                    <button type="submit"
                            class="btn btn-outline-primary">
                        buy
                    </button>
                </form>
            </td>
        </tr>
    }
</table>

<div>
    @for (int i = 1; i <= Model.PageOptionsOut.PageCount; i++)
    {
        <button form="filter-form" name="page" value="@i"
                class="btn btn-sm btn-light">
            @i
        </button>
    }
</div>